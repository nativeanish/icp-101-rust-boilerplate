type Error = variant { NotFound : record { msg : text } };
type Result = variant { Ok; Err : Error };
type Result_1 = variant { Ok : User; Err : Error };
type Result_2 = variant { Ok : Tweet; Err : Error };
type Tweet = record {
  id : nat64;
  updated_at : opt nat64;
  content : text;
  created_at : nat64;
  user_id : nat64;
};
type TweetPayload = record { content : text; user_id : nat64 };
type User = record { id : nat64; bio : text; username : text };
type UserPayload = record { bio : text; username : text };
service : {
  create_tweet : (TweetPayload) -> (opt Tweet);
  create_user : (UserPayload) -> (opt User);
  delete_tweet : (nat64) -> (Result);
  delete_user : (nat64) -> (Result);
  edit_user : (nat64, UserPayload) -> (Result_1);
  get_all_users : () -> (vec User) query;
  get_tweet : (nat64) -> (Result_2) query;
  get_user : (nat64) -> (Result_1) query;
  update_tweet : (nat64, TweetPayload) -> (Result_2);
}
